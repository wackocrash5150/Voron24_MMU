#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
##################################################################
# 	PRINT_START
##################################################################
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    M117 Turning filter on...                 ; display message
    SET_FAN_SPEED FAN=Nevermore SPEED=1            ; turn Nevermore fan on
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0  ; disable filament motion sensor
    M117 Homing...                 ; display message
    G28                                            ; home all axes
    #G1 Z20 F3000                                   ; move nozzle away from bed
    #G1 E6.0 F3600                                 ; extrude filament
    G92 E0                                         ; zero the extruder
    # M117 Getting Klicky...                 ; display message
    # Attach_Probe_Lock ; snag the Klicky

    M117 Leveling...                 ; display message
    QUAD_GANTRY_LEVEL
    M117 Prepping nozzle...                 ; display message
    PARK
    G1 E10 F120
    G1 E-10 F1200
    M117 Cleaning nozzle...                 ; display message
    CLEAN_NOZZLE
    G28 Z
    # M117 Calculating Z Offset...                 ; display message
    # Z_CALIBRATION ; calculate Z offset
    M117 Adaptive Mesh...                 ; display message
    BED_MESH_CLEAR ; Clear Bed Mesh
    BED_MESH_CALIBRATE ; Adaptive Meshing
    # M117 Returning Klicky...                 ; display message
    # Dock_Probe_Unlock ; put the Klicky back
    M117 Logo Purge...                 ; display message
    VORON_PURGE ; Adaptive Purge
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1  ; enable filament motion sensor
    

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0  ; disable filament motion sensor
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180

##################################################################
# 	CALIBRATE Z
##################################################################

# [gcode_macro Z_CALIBRATION] ; ##################################### 
# gcode: ;
#     CALIBRATE_Z ; start calibration

# [gcode_macro PROBE_CALIBRATE]
# gcode:
#     CARTOGRAPHER_CALIBRATE

##################################################################
# 	PROBE TEST
##################################################################

# [gcode_macro PROBE_TEST] ; ##################################### 
# gcode: ;
#     PROBE_ACCURACY ; start 

##################################################################
# 	KAMP
##################################################################

[gcode_macro KAMP] ; ##################################### (UNCOMMENT SECTION TO USE KAMP)
gcode: ;
    BED_MESH_CLEAR ; Clear Bed Mesh
    BED_MESH_CALIBRATE ; Adaptive Meshing
  # PURGE_LINE  ; Side Purge ################################ (UNCOMMENT TO USE NORMAL SIDE PURGE, COMMENT OUT TO USE ADAPTIVE PURGE)
  # LINE_PURGE ; Adaptive Purge ############################ (COMMENT OUT TO USE NORMAL SIDE PURGE, UNCOMMENT TO USE ADAPTICE PURGE)
    VORON_PURGE ; Adaptive Purge ############################ (COMMENT OUT TO USE NORMAL SIDE PURGE, UNCOMMENT TO USE ADAPTICE PURGE)

##################################################################
# 	LIGHTS
##################################################################

[gcode_macro LIGHTS_OFF]
gcode:
  # SET_LED LED="back_lights" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
  SET_LED LED="chamber_lights" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
  SET_LED LED="sb_leds" RED=0 GREEN=0 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob

[delayed_gcode setdisplayneopixel]
initial_duration: 5
gcode:
        # SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=0 INDEX=1 TRANSMIT=0
        # SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        # SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 
        # SET_LED LED="back_lights" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
        SET_LED LED="chamber_lights" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
        SET_LED LED="sb_leds" RED=1 GREEN=1 BLUE=1 WHITE=1 SYNC=0 TRANSMIT=1

[gcode_macro LIGHTS_ON]
gcode:
        # SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=0 INDEX=1 TRANSMIT=0
        # SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        # SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 
        # SET_LED LED="back_lights" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
        SET_LED LED="chamber_lights" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
        SET_LED LED="sb_leds" RED=1 GREEN=1 BLUE=1 WHITE=1 SYNC=0 TRANSMIT=1


##################################################################
# 	CARTOGRAPHER QUAD GANTRY LEVEL
##################################################################

[gcode_macro Cartographer_QGL] # safer and faster QGL for Cartographer
gcode:
    G28 # or use a conditional or safe homing
    QUAD_GANTRY_LEVEL horizontal_move_z=10 retries=0 retry_tolerance=1.000
    QUAD_GANTRY_LEVEL horizontal_move_z=3
    G28 Z

